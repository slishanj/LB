/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package london.rescumanager;

import eu.medsea.mimeutil.MimeException;
import eu.medsea.mimeutil.MimeUtil;
import java.awt.Color;
import java.awt.HeadlessException;
import java.io.File;
import java.io.IOException;
import java.util.Collection;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class RestoreCheck extends javax.swing.JFrame {

    /**
     * Creates new form RestoreCheck
     */
    public RestoreCheck() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        brestore = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        bselect = new javax.swing.JButton();
        l_filename = new javax.swing.JLabel();
        l_file_mime = new javax.swing.JLabel();
        l_createDB = new javax.swing.JLabel();
        l_selectingDB = new javax.swing.JLabel();
        l_restored = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 204, 204));

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        brestore.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        brestore.setText("Restore Database");
        brestore.setEnabled(false);
        brestore.setOpaque(false);
        brestore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brestoreActionPerformed(evt);
            }
        });

        jLabel1.setText("Database Name  : LB");

        bselect.setText("Select Backup File");
        bselect.setOpaque(false);
        bselect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bselectActionPerformed(evt);
            }
        });

        l_filename.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        l_file_mime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        l_createDB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        l_selectingDB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        l_restored.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(l_filename, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(l_file_mime, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(l_createDB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(l_selectingDB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bselect, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(brestore, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(57, Short.MAX_VALUE))
            .addComponent(l_restored, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bselect, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l_filename, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l_file_mime, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(brestore, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(l_createDB, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l_selectingDB, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(l_restored, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    static String path;
    private void bselectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bselectActionPerformed

        /*
         * libraries from
         * http://mvnrepository.com/artifact/eu.medsea.mimeutil/mime-util/2.1.1
         * http://mvnrepository.com/artifact/junit/junit
         * http://mvnrepository.com/artifact/log4j/log4j
         * http://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12
         *
         * are included for procedures below....
         *
         * also followed
         * http://stackoverflow.com/questions/2091014/get-real-file-extension-java-code
         * http://www.rgagnon.com/javadetails/java-0487.html
         * for information...
         */

        try {
            JFileChooser selfile = new JFileChooser();
            int getsel = selfile.showOpenDialog(null);

            if (getsel == JFileChooser.APPROVE_OPTION) {
                File selected = selfile.getSelectedFile();

                jPanel1.setBackground(Color.PINK);
                this.repaint();
                System.gc();

                String filen = selected.getName().toString();
                path = selected.getAbsolutePath();
                if (filen.endsWith(".sql")) {
                    l_filename.setText("'" + selected.getName().toString() + "'" + " - Name Check Passed");
                    System.out.println("" + filen);

                    MimeUtil.registerMimeDetector("eu.medsea.mimeutil.detector.MagicMimeMimeDetector");
                    File f = new File(path);
                    Collection<?> mimeTypes = MimeUtil.getMimeTypes(f);
                    System.out.println(mimeTypes);

                    jPanel1.setBackground(Color.RED);
                    this.repaint();
                    System.gc();

                    if ("application/octet-stream".equals(mimeTypes.toString())) {
                        Thread.sleep(2000);
                        l_file_mime.setText("'" + mimeTypes + "'" + " - File Check Passed");
                        brestore.setEnabled(true);
                        jPanel1.setBackground(Color.PINK);
                        this.repaint();
                        System.gc();
                    } else {
                        System.gc();
                        l_file_mime.setText("'" + mimeTypes + "'" + " - File Check Failure!");
                        JOptionPane.showMessageDialog(null, "Cannot Continue with Incorrect Backup Files");
                    }
                }
            }
        } catch (HeadlessException | MimeException | InterruptedException ex) {
            System.out.println("" + ex);
        }
//-------------------------------------------------------------------------------------------------------//
//     http://sourceforge.net/projects/jmimemagic/

//Magic parser = new Magic() ;
// getMagicMatch accepts Files or byte[],
// which is nice if you want to test streams
//MagicMatch match = parser.getMagicMatch(new File("C:/Backup07Dec2012.sql"));
//System.out.println(match.getMimeType()) ;

    }//GEN-LAST:event_bselectActionPerformed

    private void brestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brestoreActionPerformed
        try {
            new Restore().restore1();
            jPanel1.setBackground(Color.RED);
            this.repaint();
            Thread.sleep(1000);
            l_createDB.setText("Database Created...");
            jPanel1.setBackground(Color.PINK);
            this.repaint();
            System.gc();

            new Restore().restore2(path);
            l_selectingDB.setText("Target Database Found...");
            Thread.sleep(1000);
            l_restored.setText("Database Restoration Successfull");
            jPanel1.setBackground(Color.green);
            this.repaint();


        } catch (IOException | InterruptedException ex) {
            System.out.println("" + ex);
        }
    }//GEN-LAST:event_brestoreActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RestoreCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RestoreCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RestoreCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RestoreCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new RestoreCheck().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton brestore;
    private javax.swing.JButton bselect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel l_createDB;
    private javax.swing.JLabel l_file_mime;
    private javax.swing.JLabel l_filename;
    private javax.swing.JLabel l_restored;
    private javax.swing.JLabel l_selectingDB;
    // End of variables declaration//GEN-END:variables
}
